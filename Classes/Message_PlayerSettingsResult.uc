/*******************************************************************************
 * Message_PlayerSettingsResult generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Message_PlayerSettingsResult extends LocalMessage
    hidecategories(Movement,Collision,Lighting,LightColor,Karma,Force);

var string PlayerName;

static function string GetString(optional int SwitchNum, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject)
{
    // End:0x4D
    if(SwitchNum == 0)
    {
        return "No settings found. Make sure your stats username is configured.";
    }
    // End:0xA1
    if(SwitchNum == 1)
    {
        return "Unable to save settings. Have you configured an unique stats username?";
    }
    // End:0xC0
    if(SwitchNum == 2)
    {
        return "Settings loaded.";
    }
    // End:0xDE
    if(SwitchNum == 3)
    {
        return "Settings saved.";
    }
    // End:0x138
    if(SwitchNum == 4)
    {
        return "You have loaded settings too recently, please wait 5 seconds and try again!";
    }
    // End:0x191
    if(SwitchNum == 5)
    {
        return "You have saved settings too recently, please wait 5 seconds and try again!";
    }
    // End:0x1CC
    if(SwitchNum == 6)
    {
        return "Server side settings are currently disabled.";
    }
    //return;    
}

static simulated function ClientReceive(PlayerController P, optional int SwitchNum, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject)
{
    // End:0x37
    if(SwitchNum <= 1)
    {
        default.DrawColor.R = byte(255);
        default.DrawColor.G = 0;
        default.DrawColor.B = 0;
    }
    // End:0x9A
    else
    {
        // End:0x6F
        if(SwitchNum <= 3)
        {
            default.DrawColor.R = 0;
            default.DrawColor.G = byte(255);
            default.DrawColor.B = 0;
        }
        // End:0x9A
        else
        {
            default.DrawColor.R = byte(255);
            default.DrawColor.G = byte(255);
            default.DrawColor.B = 0;
        }
    }
    super.ClientReceive(P, SwitchNum, RelatedPRI_1, RelatedPRI_2, OptionalObject);
    //return;    
}

defaultproperties
{
    bIsUnique=true
    bFadeMessage=true
    StackMode=2
    PosY=0.50
}