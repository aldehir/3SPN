/*******************************************************************************
 * Misc_PlayerData generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Misc_PlayerData extends Object
    dependson(Misc_Util)
    config;

struct TrackedData
{
    var int Rounds;
    var float Score;
    var int Kills;
    var int Deaths;
    var int Thaws;
    var int Git;
};

var Misc_Player Owner;
var string OwnerName;
var string OwnerID;
var int LastActiveTime;
var string StatsID;
var int StatsIndex;
var int TeamIdx;
var bool StatsReceived;
var float Rank;
var float AvgPPR;
var config TrackedData Current;

static function AttachPlayerRecord(Misc_Player P, Misc_PlayerData PD)
{
    local string PlayerName;

    PlayerName = class'Misc_Util'.static.StripColor(P.PlayerReplicationInfo.PlayerName);
    ReplaceText(PlayerName, " ", "_");
    ReplaceText(PlayerName, "]", "_");
    // End:0x9A
    if(P.PlayerReplicationInfo.Team != none)
    {
        PD.TeamIdx = P.PlayerReplicationInfo.Team.TeamIndex;
    }
    PD.OwnerName = PlayerName;
    PD.OwnerID = P.GetPlayerIDHash();
    PD.StatsID = class'Misc_Util'.static.GetStatsID(P);
    PD.Owner = P;
    P.PlayerData = PD;
    //return;    
}

static function DetachPlayerRecord(Misc_PlayerData PD)
{
    // End:0x2D
    if(PD.Owner != none)
    {
        PD.Owner.PlayerData = none;
    }
    PD.Owner = none;
    //return;    
}

static function PlayerChangeName(Misc_Player P)
{
    local string PlayerName;

    // End:0x2C
    if((P.PlayerData == none) || P.PlayerReplicationInfo == none)
    {
        return;
    }
    PlayerName = class'Misc_Util'.static.StripColor(P.PlayerReplicationInfo.PlayerName);
    ReplaceText(PlayerName, " ", "_");
    ReplaceText(PlayerName, "]", "_");
    P.PlayerData.OwnerName = PlayerName;
    //return;    
}

static function ResetStats(Misc_PlayerData PD)
{
    PD.Rank = 0.0;
    PD.AvgPPR = 0.0;
    //return;    
}

static function ResetTrackedData(out TrackedData D)
{
    D.Rounds = 0;
    D.Score = 0.0;
    D.Kills = 0;
    D.Deaths = 0;
    D.Thaws = 0;
    D.Git = 0;
    //return;    
}

static function AddTrackedData(out TrackedData d1, TrackedData d2)
{
    d1.Rounds += d2.Rounds;
    d1.Score += d2.Score;
    d1.Kills += d2.Kills;
    d1.Deaths += d2.Deaths;
    d1.Thaws += d2.Thaws;
    d1.Git += d2.Git;
    //return;    
}
