/*******************************************************************************
 * Message_PlayerIsOut generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Message_PlayerIsOut extends LocalMessage
    hidecategories(Movement,Collision,Lighting,LightColor,Karma,Force);

var localized string YouAreOut;
var localized string PlayerIsOut;
var localized string PlayerIsOutOpen;

static function string GetString(optional int SwitchNum, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject)
{
    // End:0x11
    if(SwitchNum == 0)
    {
        return default.YouAreOut;
    }
    return (default.PlayerIsOutOpen @ RelatedPRI_1.PlayerName) @ default.PlayerIsOut;
    //return;    
}

static simulated function ClientReceive(PlayerController P, optional int SwitchNum, optional PlayerReplicationInfo RelatedPRI_1, optional PlayerReplicationInfo RelatedPRI_2, optional Object OptionalObject)
{
    // End:0x44
    if(RelatedPRI_1.Team == none)
    {
        default.DrawColor.R = byte(255);
        default.DrawColor.G = byte(255);
        default.DrawColor.B = byte(255);
    }
    // End:0xB6
    else
    {
        // End:0x8D
        if(RelatedPRI_1.Team.TeamIndex == 0)
        {
            default.DrawColor.R = byte(255);
            default.DrawColor.G = 75;
            default.DrawColor.B = 75;
        }
        // End:0xB6
        else
        {
            default.DrawColor.R = 75;
            default.DrawColor.G = 128;
            default.DrawColor.B = byte(255);
        }
    }
    default.PosY = 0.590 + (float(SwitchNum) * 0.2850);
    // End:0x232
    if(((P.PlayerReplicationInfo.Team != none) && RelatedPRI_1.Team.TeamIndex == P.PlayerReplicationInfo.Team.TeamIndex) || (((P.PlayerReplicationInfo.bOnlySpectator && Pawn(P.ViewTarget) != none) && Pawn(P.ViewTarget).PlayerReplicationInfo != none) && Pawn(P.ViewTarget).PlayerReplicationInfo.Team != none) && Pawn(P.ViewTarget).PlayerReplicationInfo.Team.TeamIndex == RelatedPRI_1.Team.TeamIndex)
    {
        // End:0x232
        if(class'Misc_Player'.default.SoundTMDeath != none)
        {
            P.ClientPlaySound(class'Misc_Player'.default.SoundTMDeath);
        }
    }
    super.ClientReceive(P, SwitchNum, RelatedPRI_1, RelatedPRI_2, OptionalObject);
    //return;    
}

defaultproperties
{
    YouAreOut="YOU ARE OUT!"
    PlayerIsOut="IS OUT!"
    bIsUnique=true
    bIsConsoleMessage=false
    bFadeMessage=true
    StackMode=2
    PosY=0.8750
}