/*******************************************************************************
 * TAM_TeamInfoRed generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class TAM_TeamInfoRed extends TeamRedConfigured
    dependson(Misc_DynComboManager)
    dependson(TeamArenaMaster)
    hidecategories(Movement,Collision,Lighting,LightColor,Karma,Force)
    config;

var Misc_DynComboManager ComboManager;
var Misc_DynComboReplicationInfo ComboRI;
var int StartingHealth;

replication
{
    // Pos:0x000
    reliable if(bNetDirty && Role == ROLE_Authority)
        ComboRI, StartingHealth
}

function PostBeginPlay()
{
    super.PostBeginPlay();
    // End:0x73
    if((TeamArenaMaster(Level.Game) != none) && !TeamArenaMaster(Level.Game).bDisableTeamCombos)
    {
        ComboManager = Spawn(class'Misc_DynComboManager');
        ComboRI = Spawn(class'Misc_DynComboReplicationInfo');
        ComboManager.ComboRI = ComboRI;
    }
    //return;    
}

function PlayerUsedCombo(Controller Player, class<Combo> ComboClass)
{
    // End:0x3F
    if((ComboManager != none) && Player.GetTeamNum() == TeamIndex)
    {
        ComboManager.PlayerUsedCombo(Player, ComboClass);
    }
    //return;    
}

function PlayerDied(Controller Player)
{
    // End:0x3A
    if((ComboManager != none) && Player.GetTeamNum() == TeamIndex)
    {
        ComboManager.PlayerDied(Player);
    }
    //return;    
}
