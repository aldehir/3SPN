/*******************************************************************************
 * Freon_SquadAI generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Freon_SquadAI extends SquadAI
    hidecategories(Movement,Collision,Lighting,LightColor,Karma,Force);

function bool ValidEnemy(Pawn NewEnemy)
{
    // End:0x2B
    if((Freon_Pawn(NewEnemy) != none) && Freon_Pawn(NewEnemy).bFrozen)
    {
        return false;
    }
    return super.ValidEnemy(NewEnemy);
    //return;    
}

function bool TellBotToFollow(Bot B, Controller C)
{
    // End:0x40
    if(((C != none) && C.PlayerReplicationInfo != none) && C.PlayerReplicationInfo.bOutOfLives)
    {
        return false;
    }
    return super.TellBotToFollow(B, C);
    //return;    
}

function bool CheckSquadObjectives(Bot B)
{
    local int i;

    // End:0x10
    if(TryingToThaw(B))
    {
        return true;
    }
    // End:0x5E
    if((Freon_Player(SquadLeader) != none) && Freon_Player(SquadLeader).FrozenPawn != none)
    {
        // End:0x5E
        if(SetThawTarget(B, Freon_Player(SquadLeader).FrozenPawn))
        {
            return true;
        }
    }
    // End:0x154
    if(Freon(Level.Game).FrozenPawns.Length > 0)
    {
        i = 0;
        J0x88:
        // End:0x154 [Loop If]
        if(i < Freon(Level.Game).FrozenPawns.Length)
        {
            // End:0x14A
            if((Freon(Level.Game).FrozenPawns[i] != none) && Freon(Level.Game).FrozenPawns[i].GetTeamNum() == Team.TeamIndex)
            {
                // End:0x14A
                if(SetThawTarget(B, Freon(Level.Game).FrozenPawns[i]))
                {
                    return true;
                }
            }
            ++ i;
            // [Loop Continue]
            goto J0x88;
        }
    }
    return super.CheckSquadObjectives(B);
    //return;    
}

function bool TryingToThaw(Bot B)
{
    // End:0x7F
    if(((B.MoveTarget != none) && Freon_Pawn(B.MoveTarget) != none) && Freon_Pawn(B.MoveTarget).MyTrigger != none)
    {
        return Freon_Pawn(B.MoveTarget).MyTrigger.TellBotToThaw(B);
    }
    return false;
    //return;    
}

function bool SetThawTarget(Bot B, Freon_Pawn P)
{
    local Freon_Trigger FT;

    // End:0x38
    if((P != none) && P.MyTrigger != none)
    {
        FT = P.MyTrigger;
    }
    // End:0x3A
    else
    {
        return false;
    }
    return FT.TellBotToThaw(B);
    //return;    
}
