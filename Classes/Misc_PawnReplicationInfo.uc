/*******************************************************************************
 * Misc_PawnReplicationInfo generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Misc_PawnReplicationInfo extends ReplicationInfo
    hidecategories(Movement,Collision,Lighting,LightColor,Karma,Force);

var Vector Position;
var byte Health;
var byte Shield;
var byte Adrenaline;
var bool bInvis;
var xPawn MyPawn;

replication
{
    // Pos:0x000
    reliable if(bNetDirty && Role == ROLE_Authority)
        Adrenaline, Health, 
        Position, Shield, 
        bInvis
}

function SetMyPawn(xPawn P)
{
    // End:0x75
    if(P == none)
    {
        Health = 0;
        Shield = 0;
        Adrenaline = 0;
        Position = vect(0.0, 0.0, 0.0);
        bInvis = false;
        NetUpdateFrequency = default.NetUpdateFrequency * 0.10;
        NetPriority = default.NetPriority * 0.10;
        MyPawn = none;
        SetTimer(0.0, false);
    }
    // End:0x12E
    else
    {
        MyPawn = P;
        Health = byte(MyPawn.Health);
        Shield = byte(MyPawn.ShieldStrength);
        Adrenaline = byte(MyPawn.Controller.Adrenaline);
        Position = MyPawn.Location;
        bInvis = MyPawn.bInvis;
        NetUpdateFrequency = default.NetUpdateFrequency;
        NetPriority = default.NetPriority;
        NetUpdateTime = Level.TimeSeconds - float(5);
        SetTimer(0.20, true);
    }
    //return;    
}

event Timer()
{
    // End:0x2A
    if((MyPawn == none) || MyPawn.Controller == none)
    {
        SetMyPawn(none);
        return;
    }
    Position = MyPawn.Location;
    Health = byte(Min(255, MyPawn.Health));
    Shield = byte(Min(255, int(MyPawn.ShieldStrength)));
    Adrenaline = byte(Min(255, int(MyPawn.Controller.Adrenaline)));
    bInvis = MyPawn.bInvis;
    //return;    
}

defaultproperties
{
    NetUpdateFrequency=3.0
    NetPriority=0.50
}