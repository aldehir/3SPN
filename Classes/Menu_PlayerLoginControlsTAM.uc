/*******************************************************************************
 * Menu_PlayerLoginControlsTAM generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Menu_PlayerLoginControlsTAM extends UT2K4Tab_PlayerLoginControls
    editinlinenew
    instanced;

function bool InternalOnPreDraw(Canvas C)
{
    local GameReplicationInfo GRI;

    GRI = GetGRI();
    // End:0x1F1
    if(GRI != none)
    {
        // End:0x26
        if(bInit)
        {
            InitGRI();
        }
        // End:0x165
        if(bTeamGame)
        {
            // End:0x78
            if(GRI.Teams[0] != none)
            {
                sb_Red.Caption = RedTeam @ string(int(GRI.Teams[0].Score));
            }
            // End:0xC1
            if(GRI.Teams[1] != none)
            {
                sb_Blue.Caption = BlueTeam @ string(int(GRI.Teams[1].Score));
            }
            // End:0x165
            if(UnresolvedNativeFunction_99().PlayerReplicationInfo.Team != none)
            {
                // End:0x134
                if(UnresolvedNativeFunction_99().PlayerReplicationInfo.Team.TeamIndex == 0)
                {
                    sb_Red.HeaderBase = texture'Display95';
                    sb_Blue.HeaderBase = sb_Blue.default.HeaderBase;
                }
                // End:0x165
                else
                {
                    sb_Blue.HeaderBase = texture'Display95';
                    sb_Red.HeaderBase = sb_Blue.default.HeaderBase;
                }
            }
        }
        SetButtonPositions(C);
        UpdatePlayerLists();
        // End:0x1E6
        if(((UnresolvedNativeFunction_99().myHUD == none) || !UnresolvedNativeFunction_99().myHUD.IsInCinematic()) && (GRI.MaxLives <= 0) || !UnresolvedNativeFunction_99().PlayerReplicationInfo.bOnlySpectator)
        {
            EnableComponent(b_Spec);
        }
        // End:0x1F1
        else
        {
            DisableComponent(b_Spec);
        }
    }
    return false;
    //return;    
}
