/*******************************************************************************
 * Menu_Menu3SPN generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib ? 2009-2013 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Menu_Menu3SPN extends UT2K3GUIPage
    editinlinenew
    instanced;

var export editinline GUITabControl TabC;
var export editinline Menu_TabColoredNames NamesTab;
var export editinline Menu_TabBrightskins BSTab;
var export editinline Menu_TabMisc MiscTab;
var export editinline Menu_TabInfo InfoTab;
var export editinline Menu_TabRanks StatsTab;
var export editinline UT2K3TabPanel AdminTab;
var export editinline Menu_TabTournamentAdmin TournamentAdminTab;
var bool DefaultToInfoTab;
var bool SettingsDirty;
var bool bAdmin;

function bool AllowOpen(string MenuClass)
{
    return false;
    //return;    
}

function InitComponent(GUIController MyController, GUIComponent MyOwner)
{
    super(GUIPage).InitComponent(MyController, MyOwner);
    bAdmin = (PlayerOwner().PlayerReplicationInfo != none) && PlayerOwner().PlayerReplicationInfo.bAdmin || PlayerOwner().Level.NetMode == NM_Standalone;
    GUITitleBar(Controls[1]).Caption = ("3SPN" @ class'Misc_BaseGRI'.default.Version) @ "Configuration";
    TabC = GUITabControl(Controls[2]);
    InfoTab = Menu_TabInfo(TabC.AddTab("Info", "3SPNv3210CW.Menu_TabInfo",, "General Information", DefaultToInfoTab));
    StatsTab = Menu_TabRanks(TabC.AddTab("Ranks", "3SPNv3210CW.Menu_TabRanks",, "Ranks", false));
    MiscTab = Menu_TabMisc(TabC.AddTab("Miscellaneous", "3SPNv3210CW.Menu_TabMisc",, "Miscellaneous player options", !DefaultToInfoTab));
    BSTab = Menu_TabBrightskins(TabC.AddTab("Brightskins & Models", "3SPNv3210CW.Menu_TabBrightskins",, "Brightskins configuration", false));
    NamesTab = Menu_TabColoredNames(TabC.AddTab("Colored Names", "3SPNv3210CW.Menu_TabColoredNames",, "Colored Names", false));
    // End:0x2B5
    if(InfoTab == none)
    {
        Log("Count not open tab Menu_TabInfo", '3SPN');
    }
    // End:0x2E9
    if(StatsTab == none)
    {
        Log("Count not open tab Menu_TabRanks", '3SPN');
    }
    // End:0x31C
    if(MiscTab == none)
    {
        Log("Could not open tab Menu_TabMisc", '3SPN');
    }
    // End:0x356
    if(BSTab == none)
    {
        Log("Could not open tab Menu_TabBrightskins", '3SPN');
    }
    // End:0x38E
    if(NamesTab == none)
    {
        Log("Could not open tab Menu_ColoredNames", '3SPN');
    }
    // End:0x561
    if(bAdmin)
    {
        TournamentAdminTab = Menu_TabTournamentAdmin(TabC.AddTab("Tournament Admin", "3SPNv3210CW.Menu_TabTournamentAdmin",, "Tournament", false));
        // End:0x4EF
        if(PlayerOwner().Level.GRI != none)
        {
            // End:0x493
            if(PlayerOwner().Level.GRI.bTeamGame)
            {
                AdminTab = Menu_TabTAMAdmin(TabC.AddTab("Admin", "3SPNv3210CW.Menu_TabTAMAdmin",, "Admin/Server configuration", false));
            }
            // End:0x4EF
            else
            {
                AdminTab = Menu_TabAMAdmin(TabC.AddTab("Admin", "3SPNv3210CW.Menu_TabAMAdmin",, "Admin/Server configuration", false));
            }
        }
        // End:0x523
        if(AdminTab == none)
        {
            Log("Could not open tab Menu_TabAdmin", '3SPN');
        }
        // End:0x561
        if(TournamentAdminTab == none)
        {
            Log("Could not open the Menu_TabTournamentAdmin", '3SPN');
        }
    }
    //return;    
}

function InternalOnClose(optional bool bCanceled)
{
    local Misc_Player MP;

    // End:0x39
    if(BSTab.RedSpinnyDude != none)
    {
        BSTab.RedSpinnyDude.Destroy();
        BSTab.RedSpinnyDude = none;
    }
    // End:0x72
    if(BSTab.BlueSpinnyDude != none)
    {
        BSTab.BlueSpinnyDude.Destroy();
        BSTab.BlueSpinnyDude = none;
    }
    // End:0xAB
    if(BSTab.YellowSpinnyDude != none)
    {
        BSTab.YellowSpinnyDude.Destroy();
        BSTab.YellowSpinnyDude = none;
    }
    // End:0xF8
    if(class'Misc_Player'.default.AutoSyncSettings && default.SettingsDirty)
    {
        MP = Misc_Player(PlayerOwner());
        // End:0xF0
        if(MP != none)
        {
            MP.SaveSettings();
        }
        default.SettingsDirty = false;
    }
    //return;    
}

defaultproperties
{
    bRenderWorld=true
    bRequire640x480=false
    bAllowedAsLast=true
    OnClose=InternalOnClose
    begin object name=MenuBack class=GUIImage
        Image=Texture'2K4Menus.NewControls.Display98'
        ImageColor=(R=200,G=128,B=100,A=255)
        ImageStyle=1
        ImageRenderStyle=1
        WinTop=0.10
        WinLeft=0.10
        WinWidth=0.80
        WinHeight=0.80
        RenderWeight=0.0000030
    object end
    // Reference: GUIImage'Menu_Menu3SPN.MenuBack'
    Controls(0)=MenuBack
    begin object name=MenuTitle class=GUITitleBar
        Effect=FinalBlend'InterfaceContent.Menu.CO_Final'
        Caption="AM/TAM Configuration"
        StyleName="Header"
        WinHeight=0.0750
        bBoundToParent=true
        bScaleToParent=true
    object end
    // Reference: GUITitleBar'Menu_Menu3SPN.MenuTitle'
    Controls(1)=MenuTitle
    begin object name=Tabs class=GUITabControl
        bDockPanels=true
        TabHeight=0.03750
        WinTop=0.060
        WinLeft=0.0150
        WinWidth=0.970
        WinHeight=1.0
        bBoundToParent=true
        bScaleToParent=true
        bAcceptsInput=true
        OnActivate=InternalOnActivate
    object end
    // Reference: GUITabControl'Menu_Menu3SPN.Tabs'
    Controls(2)=Tabs
    WinTop=0.0890
    WinLeft=0.10
    WinWidth=0.80
    WinHeight=0.7750
}